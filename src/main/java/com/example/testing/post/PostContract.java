package com.example.testing.post;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tuples.generated.Tuple9;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.5.0.
 */
@SuppressWarnings("rawtypes")
public class PostContract extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_CREATEPOST = "createPost";

    public static final String FUNC_GETPOST = "getPost";

    public static final String FUNC_GETPOSTSBYNAME = "getPostsByName";

    public static final String FUNC_POSTCOUNT = "postCount";

    public static final String FUNC_POSTS = "posts";

    @Deprecated
    protected PostContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PostContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PostContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PostContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> createPost(String _userId, String _userNickname, String _userPhone, String _postId, String _postImageUrl, String _postTitle, String _postPrice, String _postContent, BigInteger _createdAt) {
        final Function function = new Function(
                FUNC_CREATEPOST,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_userId),
                        new org.web3j.abi.datatypes.Utf8String(_userNickname),
                        new org.web3j.abi.datatypes.Utf8String(_userPhone),
                        new org.web3j.abi.datatypes.Utf8String(_postId),
                        new org.web3j.abi.datatypes.Utf8String(_postImageUrl),
                        new org.web3j.abi.datatypes.Utf8String(_postTitle),
                        new org.web3j.abi.datatypes.Utf8String(_postPrice),
                        new org.web3j.abi.datatypes.Utf8String(_postContent),
                        new org.web3j.abi.datatypes.generated.Uint256(_createdAt)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple5<String, String, BigInteger, String, String>> getPost(BigInteger _postId) {
        final Function function = new Function(FUNC_GETPOST,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_postId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple5<String, String, BigInteger, String, String>>(function,
                new Callable<Tuple5<String, String, BigInteger, String, String>>() {
                    @Override
                    public Tuple5<String, String, BigInteger, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, BigInteger, String, String>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<Post>, BigInteger>> getPostsByName(String _userId) {
        final Function function = new Function(FUNC_GETPOSTSBYNAME,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_userId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Post>>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple2<List<Post>, BigInteger>>(function,
                new Callable<Tuple2<List<Post>, BigInteger>>() {
                    @Override
                    public Tuple2<List<Post>, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<Post>, BigInteger>(
                                convertToNative((List<Post>) results.get(0).getValue()),
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> postCount() {
        final Function function = new Function(FUNC_POSTCOUNT,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple9<String, String, String, String, String, String, String, String, BigInteger>> posts(BigInteger param0) {
        final Function function = new Function(FUNC_POSTS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple9<String, String, String, String, String, String, String, String, BigInteger>>(function,
                new Callable<Tuple9<String, String, String, String, String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple9<String, String, String, String, String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple9<String, String, String, String, String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue(),
                                (String) results.get(5).getValue(),
                                (String) results.get(6).getValue(),
                                (String) results.get(7).getValue(),
                                (BigInteger) results.get(8).getValue());
                    }
                });
    }

    @Deprecated
    public static PostContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PostContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PostContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PostContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PostContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PostContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PostContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PostContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PostContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PostContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PostContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PostContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<PostContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PostContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PostContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PostContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class Post extends DynamicStruct {
        public String userId;

        public String userNickname;

        public String userPhone;

        public String postId;

        public String postImageUrl;

        public String postTitle;

        public String postPrice;

        public String postContent;

        public BigInteger createdAt;

        public Post(String userId, String userNickname, String userPhone, String postId, String postImageUrl, String postTitle, String postPrice, String postContent, BigInteger createdAt) {
            super(new org.web3j.abi.datatypes.Utf8String(userId),
                    new org.web3j.abi.datatypes.Utf8String(userNickname),
                    new org.web3j.abi.datatypes.Utf8String(userPhone),
                    new org.web3j.abi.datatypes.Utf8String(postId),
                    new org.web3j.abi.datatypes.Utf8String(postImageUrl),
                    new org.web3j.abi.datatypes.Utf8String(postTitle),
                    new org.web3j.abi.datatypes.Utf8String(postPrice),
                    new org.web3j.abi.datatypes.Utf8String(postContent),
                    new org.web3j.abi.datatypes.generated.Uint256(createdAt));
            this.userId = userId;
            this.userNickname = userNickname;
            this.userPhone = userPhone;
            this.postId = postId;
            this.postImageUrl = postImageUrl;
            this.postTitle = postTitle;
            this.postPrice = postPrice;
            this.postContent = postContent;
            this.createdAt = createdAt;
        }

        public Post(Utf8String userId, Utf8String userNickname, Utf8String userPhone, Utf8String postId, Utf8String postImageUrl, Utf8String postTitle, Utf8String postPrice, Utf8String postContent, Uint256 createdAt) {
            super(userId, userNickname, userPhone, postId, postImageUrl, postTitle, postPrice, postContent, createdAt);
            this.userId = userId.getValue();
            this.userNickname = userNickname.getValue();
            this.userPhone = userPhone.getValue();
            this.postId = postId.getValue();
            this.postImageUrl = postImageUrl.getValue();
            this.postTitle = postTitle.getValue();
            this.postPrice = postPrice.getValue();
            this.postContent = postContent.getValue();
            this.createdAt = createdAt.getValue();
        }
    }
}
